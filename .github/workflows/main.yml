# This is a basic workflow to help you get started with Actions

name: fiap-producao-ms

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  TF_ACTION_WORKING_DIR: "infra"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  sonarqube:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clones is recommended for improving the relevancy of reporting
          fetch-depth: 0
      - name: Install dependencies
        run: yarn
      - name: Test and coverage
        run: yarn jest --coverage
      - name: SonarQube Scan
        with:
          projectBaseDir: src
          args: >
            -Dsonar.typescript.lcov.reportPaths=./coverage/lcov.info
            -Dsonar.verbose=true
            -Dsonar.projectKey=jonathansantoss_fiap-producao-ms
            -Dsonar.organization=jonathansantoss
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ce26616ab69961f90b45412d6fc2b44a2ae61298
          SONAR_HOST_URL: https://sonarcloud.io]
          
      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        with:
          scanMetadataReportFile: src/.scannerwork/report-task.txt
        env:
         SONAR_TOKEN: ce26616ab69961f90b45412d6fc2b44a2ae61298

  RDS:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clones is recommended for improving the relevancy of reporting
          fetch-depth: 0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Terraform init
        run: |
              cd terraform
              terraform init
      - name: Terraform Apply
        run: |
              cd terraform
              terraform apply -auto-approve -input=false
            
  serverless:
    runs-on: ubuntu-latest
    needs: RDS
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Install serverless
      run: npm install -g serverless
    - name: Install dependencies
      run: yarn install
    - name: Build
      run: yarn build
    - name: serverless deploy
      run: yarn deploy
